{
  "Component Index": {
    "isFileTemplate": true,
    "body": [
      "import * as internal from './${TM_DIRECTORY/.*\\/(.*)$/$1/g}';",
      "",
      "const ${TM_DIRECTORY/.*\\/(.*)$/$1/g} = Object.assign(internal.default, {",
      "  styles: internal.styles,",
      "  variants: internal.variants,",
      "});",
      "",
      "namespace ${TM_DIRECTORY/.*\\/(.*)$/$1/g} {",
      "  export type Props = internal.Props;",
      "}",
      "",
      "export default ${TM_DIRECTORY/.*\\/(.*)$/$1/g};"
    ]
  },
  "Forward-ref Component": {
    "isFileTemplate": true,
    "body": [
      "import '../tokens.stylex.ts';",
      "",
      "import * as stylex from '@stylexjs/stylex';",
      "import React from 'react';",
      "",
      "export interface Props {",
      "  style?: stylex.StyleXStyles;",
      "}",
      "",
      "const ${TM_FILENAME_BASE} = React.forwardRef<HTMLDivElement, Props>(({ style, ...props }, ref) => {",
      "  return <div ref={ref} {...props} {...stylex.props(styles.base, style)} />;",
      "});",
      "",
      "${TM_FILENAME_BASE}.displayName = '${TM_FILENAME_BASE}';",
      "",
      "export default ${TM_FILENAME_BASE};",
      "",
      "export const styles = stylex.create({",
      "  base: {},",
      "});"
    ]
  },
  "Static Entrypoint": {
    "isFileTemplate": true,
    "body": [
      "import { JSResource, SimpleEntryPoint } from '@loop-payments/react-router-relay';",
      "",
      "import ${TM_FILENAME_BASE/([^.]*)\\.entrypoint/${1}/} from './${TM_FILENAME_BASE/([^.]*)\\.entrypoint/${1}/}';",
      "",
      "const entrypoint: SimpleEntryPoint<typeof ${TM_FILENAME_BASE/([^.]*)\\.entrypoint/${1}/}> = {",
      "  root: JSResource('${TM_FILENAME_BASE/([^.]*)\\.entrypoint/${1}/}', () => import('./${TM_FILENAME_BASE/([^.]*)\\.entrypoint/${1}/}')),",
      "  getPreloadProps() {",
      "    return {};",
      "  },",
      "};",
      "",
      "export default entrypoint;"
    ]
  },
  "Static Page": {
    "isFileTemplate": true,
    "body": [
      "import '@boxops/components-2/src/tokens.stylex.ts'",
      "",
      "import { EmptyEntryPointProps } from '@boxops/router';",
      "import * as stylex from '@stylexjs/stylex';",
      "import { Flexbox, SideNav } from '@boxops/components-2';",
      "import React from 'react';",
      "import { semanticColor } from '@boxops/components-2/src/tokens.stylex';",
      "import Example from '../../components/Example';",
      "import PageTitle from '../../components/PageTitle';",
      "",
      "const Page: React.FC<EmptyEntryPointProps> = () => {",
      "  return (",
      "    <div {...stylex.props(styles.root)}>",
      "      <SideNav />",
      "      <div />",
      "      <Flexbox direction=\"column\" gap=\"L\">",
      "        <PageTitle />",
      "        <Example></Example>",
      "        <div {...stylex.props(styles.footer)} />",
      "      </Flexbox>",
      "      <div />",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Page;",
      "",
      "const styles = stylex.create({",
      "  root: {",
      "    display: 'grid',",
      "    gridTemplateColumns: '300px 1fr 800px 1fr',",
      "    minHeight: '100vh',",
      "  },",
      "  header: {",
      "    paddingTop: '30px',",
      "  },",
      "  footer: {",
      "    height: '200px',",
      "  },",
      "  brand: {",
      "    color: semanticColor.accent,",
      "  }",
      "});"
    ]
  }
}
